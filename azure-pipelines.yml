trigger:
  - master
pool:
  vmImage: 'macos-latest'

variables:
  - group: iotc-cpm-android
  - name: CPM_BETARELEASE_PROJECT_NAME
    value: $(Project_Name)
  - name: CPM_BETARELEASE_VERSION_CODE
    value: 0
  - name: CPM_BETARELEASE_VERSION_NAME
    value: 1.0.0

name: $(Date:yyyyMMdd)$(Rev:.r)
jobs:
- job: Android
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.18.4'
    displayName: 'Install Node'

  - script: npm install
    workingDirectory: .
    displayName: 'Install node dependencies'

  - task: DownloadSecureFile@1
    name: androidKeystore
    inputs:
      secureFile: iotc-cpm.keystore

  - bash: |
      CPM_BETARELEASE_VERSION_CODE=$(echo $(Build.BuildNumber) | sed 's/\.//')
      echo "##vso[task.setvariable variable=CPM_BETARELEASE_VERSION_CODE]$CPM_BETARELEASE_VERSION_CODE"
      cp $(androidKeystore.secureFilePath) android/app/$CPM_BETARELEASE_STORE_FILE
      ls -l android/app/$CPM_BETARELEASE_STORE_FILE

  - bash: env | sort

  - task: Gradle@2
    inputs:
      workingDirectory: 'android'
      gradleWrapperFile: 'android/gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'assembleBetaRelease'

  - task: PublishBuildArtifacts@1
    displayName: "Publish Build Artifact"
    inputs:
      PathtoPublish: 'android/app/build/outputs/apk/betaRelease/$(Project_Name)-betaRelease.apk'
      ArtifactName: 'android'
      publishLocation: 'Container'

- job: iOS
  timeoutInMinutes: 120
  variables:
    rootPath: '$(System.DefaultWorkingDirectory)'
    exportPath: '$(rootPath)/output/package'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '12.18.4'
    displayName: 'Install Node'

  - script: npm install
    workingDirectory: .
    displayName: 'Install node dependencies'

  - script: npm version prerelease --preid "$(Build.BuildNumber)" --no-git-tag-version
    workingDirectory: .
    displayName: 'Increment version in package.json'


  - task: InstallAppleCertificate@2
    displayName: "Install Apple Certificate"
    inputs:
      certSecureFile: '$(Development_Certificate_Name)'
      certPwd: '$(Development_Certificate_Password)'

  - task: InstallAppleProvisioningProfile@1
    displayName: "Install Apple provisioning profile"
    inputs:
      provisioningProfileLocation: 'secureFiles'
      provProfileSecureFile: '$(Development_Provisioning_Profile)'

  - task: ShellScript@2
    inputs:
      scriptPath: '$(rootPath)/bumpVersion.sh'

  - task: Xcode@5
    displayName: "Build Mobile Application"
    inputs:
      actions: 'build'
      configuration: 'Release'
      xcWorkspacePath: '$(rootPath)/ios/$(Project_Name).xcworkspace'
      scheme: '$(Project_Name)'
      sdk: 'iphoneos14.4'
      packageApp: true
      exportPath: '$(exportPath)'
      signingOption: 'manual'
      signingIdentity: '$(APPLE_CERTIFICATE_SIGNING_IDENTITY)'
      provisioningProfileUuid: '$(APPLE_PROV_PROFILE_UUID)'
      xcodeVersion: 'specifyPath'

  - task: PublishBuildArtifacts@1
    displayName: "Publish Dogfood Ipa"
    inputs:
      PathtoPublish: '$(exportPath)/$(Project_Name).ipa'
      ArtifactName: 'ios_appcenter'
      publishLocation: 'Container'

- job: ReleaseFile
  dependsOn:
  - Android
  - iOS
  steps:
  - task: ShellScript@2
    inputs:
      scriptPath: '$(System.DefaultWorkingDirectory)/createReleaseFile.sh'
    
  - task: PublishBuildArtifacts@1
    displayName: "Publish Build Artifact"
    inputs:
      PathtoPublish: '$(System.DefaultWorkingDirectory)/CHANGELOG.md'
      ArtifactName: 'changelog'
      publishLocation: 'Container'