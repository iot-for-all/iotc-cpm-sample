name: $(Date:yyyyMMdd)$(Rev:.r)
jobs:
  - job: iOS_Release
    timeoutInMinutes: 120
    variables:
      rootPath: '$(System.DefaultWorkingDirectory)'
      agentName: $[ dependencies.Setup.outputs['passOutput.AgentName'] ]
      archivePath: '$(rootPath)/output/archive'
      xcodeDeveloperDir: '/Applications/Xcode_$(Xcode_Version).app/Contents/Developer'
      xcarchivePath: '$(archivePath)/$(Project_Name).xcarchive'
      zipToSign: '$(archivePath)/$(Project_Name).zip'
      signedZip: '$(archivePath)/$(Project_Name).zip'
      signedExtractedPath: '$(exportPath)/signed'
    steps:
      # - task: DownloadPipelineArtifact@2
      #   inputs:
      #     source: 'specific'
      #     project: 'One'
      #     pipeline: '216276'
      #     runVersion: 'specific'
      #     runId: '54976743'
      #     allowPartiallySucceededBuilds: true
      #     allowFailedBuilds: true
      #     path: '$(archivePath)'
      #     artifact: 'archive'
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'specific' # Options: current, specific
          project: 'One' # Required when buildType == Specific
          pipeline: '216276' # Required when buildType == Specific
          #specificBuildWithTriggering: false # Optional
          buildVersionToDownload: 'specific' # Required when buildType == Specific. Options: latest, latestFromBranch, specific
          allowPartiallySucceededBuilds: true # Optional
          #branchName: 'refs/heads/master' # Required when buildType == Specific && BuildVersionToDownload == LatestFromBranch
          buildId: '54976743' # Required when buildType == Specific && BuildVersionToDownload == Specific
          #tags: # Optional
          downloadType: 'single' # Choose whether to download a single artifact or all artifacts of a specific build. Options: single, specific
          artifactName: 'archive' # Required when downloadType == Single
          #itemPattern: '**' # Optional
          downloadPath: '$(archivePath)' 
          #cleanDestinationFolder: false # Optional
          #parallelizationLimit: '8' # Optional
          #extractTars: false # Optional

      - task: DeleteFiles@1
        inputs:
          SourceFolder: '$(archivePath)'
          Contents: 'ExportOptions.plist' 
          #RemoveSourceFolder: # Optional

      - task: CopyFiles@2
        displayName: 'Copy ExportOptions'
        inputs:
          SourceFolder: '$(rootPath)'
          Contents: 'ExportOptions.plist'
          TargetFolder: '$(archivePath)'
          flattenFolders: true

      - task: ArchiveFiles@2
        displayName: 'Create zip for signing'
        inputs:
          rootFolderOrFile: '$(archivePath)'
          includeRootFolder: false
          archiveFile: '$(zipToSign)'
      
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk(temporary)'
        inputs:
          packageType: sdk
          version: 2.1.x
          installationPath: $(Agent.ToolsDirectory)/dotnet

      - task: EsrpCodeSigning@1
        displayName: 'Sign build'
        inputs:
          ConnectedServiceName: 'IoT PnP PaaD'
          FolderPath: '$(archivePath)'
          Pattern: '*.zip'
          signConfigType: 'inlineSignParams'
          inlineOperation: |
            [
                  {
                      "KeyCode" : "CP-464234-Apple",
                      "OperationCode" : "iOSAppSign",
                      "Parameters" : {},
                      "ToolName" : "sign",
                      "ToolVersion" : "1.0"
                  }
            ]
          SessionTimeout: '60'
          MaxConcurrency: '50'
          MaxRetryAttempts: '5'

      - task: ExtractFiles@1
        displayName: 'Extract signed build'
        inputs:
          archiveFilePatterns: '$(signedZip)'
          destinationFolder: '$(signedExtractedPath)'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Signed Ipa'
        inputs:
          PathtoPublish: '$(signedExtractedPath)'
          ArtifactName: 'ios_signed'
          publishLocation: 'Container'